SciPy 2021 Tutorial: Introduction to Numerical Computing With NumPy
Presented by: Logan Thomas, Enthought, Inc.
Monday, July 12th 2021.

# Session 4

# slide 28
a = np.array([[2,3], [0,1]])
a
np.min()
a.min()
np.min(a)
a.max(axis=0)
a.max(axis=1)
a = np.aragne(6).reshape(2,3)
a = np.arange(6).reshape(2,3)
a
a.mean(axis=0).shape
a.mean(axis=1).shape
a = np.array([[2,3], [0,1]])
a
a.argmax()
a
np.argmin(a)
a.shape
np.unravel_index(1, (2,2))
np.unravel_index(3, (2,2))
np.unravel_index(a.argmax(), a.shape)
a
np.unravel_index(a.argmin(), a.shape)
a = np.arange(-2,2) ** 2
a
a % 2 == 0
a[a%2==0]
np.where(a%2==0)
positives = np.aragne(1,5)
positives = np.arange(1,5)
negatives = -positives
positives
negatives
a
mask = a%2==0
mask
np.where(mask, positives, negatives)
a
b = np.arange(25).reshape(5,5)
b
np.where(b%2==0, b, np.nan)
np.where(b%2==0, b, 1)
np.where(b%2==0, b, 0)
a = np.arange(-15,15).reshape(5,6) ** 2
a
a.max()
a.max(axis=1)
a.mean(axis=0)
np.argmin(a)
a.argmin()
np.unravel_index(a.argmin(), a.shape)
a.ndim
a.shape
np.where(a=0)
np.where(a==0)
np.where(a == a.min())
b = np.array([1,2,5,5])
b.argmax()
np.where(b == b.max())
clear
a = np.arange(6) + np.arange(60, step=10).reshape(6,1)
a
np.arange(6)
np.arange(60, step=10).reshape(6,1)
clear
np.arange(6)
np.arange(60, step=10).reshape(6,1)
a = np.arange(6) + np.arange(60, step=10).reshape(6,1)
a
a.shape
%history -f session4.txt
